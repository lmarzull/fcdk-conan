

include(FindPackageHandleStandardArgs)

message(STATUS "Conan: Using autogenerated Findfcdk.cmake")
# Global approach
set(fcdk_FOUND 1)
set(fcdk_VERSION "1.0.0")

find_package_handle_standard_args(fcdk REQUIRED_VARS fcdk_VERSION VERSION_VAR fcdk_VERSION)
mark_as_advanced(fcdk_FOUND fcdk_VERSION)



set(fcdk_INCLUDE_DIRS "/home/lma/.conan/data/fcdk/1.0.0/_/_/package/0ab9fcf606068d4347207cc29edd400ceccbc944/include")
set(fcdk_INCLUDES "/home/lma/.conan/data/fcdk/1.0.0/_/_/package/0ab9fcf606068d4347207cc29edd400ceccbc944/include")
set(fcdk_DEFINITIONS )
set(fcdk_LINKER_FLAGS_LIST "" "")
set(fcdk_COMPILE_DEFINITIONS )
set(fcdk_COMPILE_OPTIONS_LIST "" "")
set(fcdk_LIBRARIES_TARGETS "") # Will be filled later, if CMake 3
set(fcdk_LIBRARIES "") # Will be filled later
set(fcdk_LIBS "") # Same as fcdk_LIBRARIES



mark_as_advanced(fcdk_INCLUDE_DIRS
                 fcdk_INCLUDES
                 fcdk_DEFINITIONS
                 fcdk_LINKER_FLAGS_LIST
                 fcdk_COMPILE_DEFINITIONS
                 fcdk_COMPILE_OPTIONS_LIST
                 fcdk_LIBRARIES
                 fcdk_LIBS
                 fcdk_LIBRARIES_TARGETS)

# Find the real .lib/.a and add them to fcdk_LIBS and fcdk_LIBRARY_LIST
set(fcdk_LIBRARY_LIST )
set(fcdk_LIB_DIRS "/home/lma/.conan/data/fcdk/1.0.0/_/_/package/0ab9fcf606068d4347207cc29edd400ceccbc944/lib")
foreach(_LIBRARY_NAME ${fcdk_LIBRARY_LIST})
    unset(CONAN_FOUND_LIBRARY CACHE)
    find_library(CONAN_FOUND_LIBRARY NAME ${_LIBRARY_NAME} PATHS ${fcdk_LIB_DIRS}
                 NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
    if(CONAN_FOUND_LIBRARY)
        list(APPEND fcdk_LIBRARIES ${CONAN_FOUND_LIBRARY})
        if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
            # Create a micro-target for each lib/a found
            set(_LIB_NAME CONAN_LIB::fcdk_${_LIBRARY_NAME})
            if(NOT TARGET ${_LIB_NAME})
                # Create a micro-target for each lib/a found
                add_library(${_LIB_NAME} UNKNOWN IMPORTED)
                set_target_properties(${_LIB_NAME} PROPERTIES IMPORTED_LOCATION ${CONAN_FOUND_LIBRARY})
            else()
                message(STATUS "Skipping already existing target: ${_LIB_NAME}")
            endif()
            list(APPEND fcdk_LIBRARIES_TARGETS ${_LIB_NAME})
        endif()
        message(STATUS "Found: ${CONAN_FOUND_LIBRARY}")
    else()
        message(STATUS "Library ${_LIBRARY_NAME} not found in package, might be system one")
        list(APPEND fcdk_LIBRARIES_TARGETS ${_LIBRARY_NAME})
        list(APPEND fcdk_LIBRARIES ${_LIBRARY_NAME})
    endif()
endforeach()
set(fcdk_LIBS ${fcdk_LIBRARIES})

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET fcdk::fcdk)
        add_library(fcdk::fcdk INTERFACE IMPORTED)
        
    if(fcdk_INCLUDE_DIRS)
      set_target_properties(fcdk::fcdk PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${fcdk_INCLUDE_DIRS}")
    endif()
    set_property(TARGET fcdk::fcdk PROPERTY INTERFACE_LINK_LIBRARIES ${fcdk_LIBRARIES_TARGETS} "${fcdk_LINKER_FLAGS_LIST}")
    set_property(TARGET fcdk::fcdk PROPERTY INTERFACE_COMPILE_DEFINITIONS ${fcdk_COMPILE_DEFINITIONS})
    set_property(TARGET fcdk::fcdk PROPERTY INTERFACE_COMPILE_OPTIONS "${fcdk_COMPILE_OPTIONS_LIST}")

        
    endif()
endif()
